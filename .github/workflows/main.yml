name: Execute Snowflake Queries

on:
  push:
    branches:
      - main
    paths:
      - 'sql_files/**'

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  run-snowflake-queries:
    runs-on: ubuntu-latest

    env:
      SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SF_USERNAME: ${{ secrets.SF_USERNAME }}
      SF_ROLE: ${{ secrets.SF_ROLE }}
      SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      SF_DATABASE: ${{ secrets.SF_DATABASE }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install SnowSQL
      run: |
        curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
        SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

    - name: Configure SnowSQL
      run: |
        mkdir -p ~/.snowsql/
        echo '[connections]' > ~/.snowsql/config
        echo "accountname = ${SF_ACCOUNT}" >> ~/.snowsql/config
        echo "username = ${SF_USERNAME}" >> ~/.snowsql/config
        echo "password = ${SNOWFLAKE_PASSWORD}" >> ~/.snowsql/config
        echo "warehousename = ${SF_WAREHOUSE}" >> ~/.snowsql/config
        echo "databasename = ${SF_DATABASE}" >> ~/.snowsql/config
        echo "rolename = ${SF_ROLE}" >> ~/.snowsql/config
        chmod 700 ~/.snowsql/config
        cat ~/.snowsql/config
        env
        SNOWSQL_CONFIG_FILE=~/.snowsql/config ~/bin/snowsql -o log_level=DEBUG

    - name: Use Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install snowflake-connector-python

    - name: Execute SQL queries
      run: |
        # Get the newest SQL file
        echo "Files in sql_files folder:"
        ls sql_files/*.sql
        
        newest_file=$(ls -t sql_files/*.sql | sort -n | tail -n 1)
        echo "Selected file: $newest_file"
        
        newest_file=$(ls -t sql_files/*.sql | tail -n 1)
        
        # Check if a file exists before attempting to execute
        if [ -n "$newest_file" ]; then
          ~/bin/snowsql -f "$newest_file"
        else
          echo "No SQL file found in the sql_files folder."
        fi
